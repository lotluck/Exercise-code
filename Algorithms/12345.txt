#include <stdio.h>

int main()
{
	int a[5] = {5,4,3,2,1};
	int b[5] = {5,4,3,2,1};
    int c[10] = {0};

	int i = 0;
	int j = 0;
	int m = 0;

	for(i = 0; i < 5; i++){
		for(j = 0; j < 5; j++){
		      c[i+j]  += a[i]*b[j];
			  printf("c[%d]= %d ",i+j,c[i+j]);
		}
		printf("\n");
	}
  for(i = 0; i < 9;i++){
	   printf("%d ",c[i]);
	}
  	printf("\n"); 
	for(i = 0;i < 9; i++){
	   c[i+1] += c[i]/10;
	   c[i] = c[i]%10;
	}
    if(c[i] != 0){
	   m = i;
	}else{
	   m = i-1;
	}

    for(i = m; i>=0;i--){
	   printf("%d",c[i]);
	}
	printf("\n");  
	printf("%d\n",12345*12345);
	return 0;
}




#include <stdio.h>
#include <string.h>


#define MAXLEN  500


int  flag = 0;     //标志数组应该从哪里开始计算
int  a[MAXLEN];  
int  b[MAXLEN];
int  c[2*MAXLEN];  //将每一位的计算结果都保存在里面

// 翻转过来好处理
void reverse_str(char *str,int *array,int len)
{
      int i = 0;

      for(i = 0; i < len; i++){
            array[len - i - 1] = str[i] - '0'; //刚开始忘记'0'
      }//end for

}

void multiply(int *a,int *b,int *c,int sa_len,int sb_len)
{ 
    int  i = 0;
    int  j = 0;
    int  sum_len = sa_len + sb_len - 1;

    for(i = 0; i < sa_len; i++){
        for(j = 0; j < sb_len; j++){
            c[i + j] += a[i] * b[j];
            printf("c[%d]= %d ",i+j,c[i+j]);
        }//end for 2
        printf("\n");
    }//end for 1
     
    for(i = 0; i < sum_len - 1; i++){
        c[i+1] += c[i] / 10;
        c[i]   %= 10;
    }//end for
    
    if(c[i] != 0){
        flag = i;
    }else{
        flag = i - 1;
    }//end if else
}

void print_c_array(int *c,int sa_len,int sb_len)
{
    int i = 0;
    int sum_len = sa_len + sb_len;

    for(i = flag; i >= 0; i--){
        printf("%d",c[i]);
    }//end for
    printf("\n");
}

int main(int argc,char *argv[])
{
    char  sa[MAXLEN];
    char  sb[MAXLEN];
    int sa_len = 0;
    int sb_len = 0;

    memset(sa,0x00,sizeof(sa));
    memset(sb,0x00,sizeof(sb));

    gets(sa);
    gets(sb);

    sa_len = strlen(sa);
    sb_len = strlen(sb);

    printf("%s %d\n",sa,sa_len);
    printf("%s %d\n",sb,sb_len);

    reverse_str(sa,a,sa_len);
    reverse_str(sb,b,sb_len);

    multiply(a,b,c,sa_len,sb_len);

    print_c_array(c,sa_len,sb_len);

    return 0;
}


#include <stdio.h>
#include <string.h>


#define MAXLEN  100


int  flag;     //标志数组应该从哪里开始计算
int  a[MAXLEN];  
int  b[MAXLEN];
int  c[MAXLEN+1];  //将每一位的计算结果都保存在里面

// 翻转过来好处理
void reverse_str(char *str,int *array,int len)
{
      int i = 0;
      int j = MAXLEN - 1;

      // 1 2 3 4 5 6
      //       4 5 6
      for(i = len - 1; i >= 0; i--){
            array[j--] = str[i] - '0';
      }//end for

}

void large_number_add(int *a,int *b,int *c,int sa_len,int sb_len)
{ 
    int  i = 0;
    int  j = MAXLEN - 1;
    int  m = sa_len>sb_len?sa_len:sb_len;

    for(i = 0; i < m; i++,j--){
          c[j] += a[j] + b[j];
          if(c[j] >= 10){
			  c[j-1]  += c[j] / 10;
              c[j] = c[j] % 10;         
          }
		  printf("c[%d]=%d,c[%d]=%d\n",j,c[j],j-1,c[j-1]);
    }
    if(c[j] != 0){
        flag = j;
    }else{
        flag = j + 1;
    }

}

void print_c_array(int *c,int sa_len,int sb_len)
{
    int i = 0;
    int sum_len = sa_len + sb_len;

    for(i = flag; i < MAXLEN; i++){
        printf("%d",c[i]);
    }//end for
    printf("\n");
}

int main(int argc,char *argv[])
{
    char  sa[MAXLEN];
    char  sb[MAXLEN];
    int sa_len = 0;
    int sb_len = 0;

    memset(sa,0x00,sizeof(sa));
    memset(sb,0x00,sizeof(sb));

    gets(sa);
    gets(sb);

    sa_len = strlen(sa);
    sb_len = strlen(sb);

    printf("%s %d\n",sa,sa_len);
    printf("%s %d\n",sb,sb_len);

    reverse_str(sa,a,sa_len);
    reverse_str(sb,b,sb_len);

    large_number_add(a,b,c,sa_len,sb_len);

    print_c_array(c,sa_len,sb_len);

    return 0;
}