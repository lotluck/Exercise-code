     某涉密单位下发了某种票据，并要在年终全部收回。每张票据有唯一的ID号。全年所有票据的ID号是连续的，但ID的开始数码是随机选定的。因为工作人员疏忽，在录入ID号的时候发生了一处错误，造成了某个ID断号，另外一个ID重号。通过编程，找出断号的ID和重号的ID。假设断号不可能发生在最大和最小号。
输入格式
要求程序首先输入一个整数N(N<100)表示后面数据行数。
接着读入N行数据。每行数据长度不等，是用空格分开的若干个（不大于100个）正整数（不大于100000），请注意行内和行末可能有多余的空格，你的程序需要能处理这些空格。每个整数代表一个ID号。
输出格式
要求程序输出1行，含两个整数m n，用空格分隔。
其中，m表示断号ID，n表示重号ID


 #include<stdio.h>

 int main(){
   int a[10001]={0};
   char c;
   long m,min=100000,max=0,i,n;
   scanf("%d",&n);
   for(i=0;i<n;i++)
     while(1)	
 	{
 		scanf("%ld",&m);
 		if(m>max) max=m;
 		if(m<min) min=m;
 		a[m]++;
 		c=getchar();
 		if(c!=' ') break;
 	}
 	
 	for(i=min;i<=max;i++)
 	{
 		if(a[i]==0)
 		   printf("%ld ",i);
 		if(a[i]==2)
 	       m=i;
 	}
 	printf("%ld",m);
 	
 	
 	return 0;
 }